{"version":3,"file":"static/js/837.418055ed.chunk.js","mappings":"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","sources":["components/pagination/PaginationNew.jsx","studentDashboard/component/CourseDeatils.jsx"],"sourcesContent":["import React from 'react'\r\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\"\r\nconst PaginationNew = ({currentPage, setCurrentPage, data, itemsPerPage}) => {\r\n\r\n    // Calculate the indices for slicing the data array\r\n    // const indexOfLastItem = currentPage * itemsPerPage;\r\n    // const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    // const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n  \r\n    // Calculate total number of pages\r\n    const totalPages = Math.ceil(data.length / itemsPerPage);\r\n    return (\r\n        <div className=\"flex items-center justify-center space-x-4 mt-10\">\r\n            <button\r\n                className={`px-6 flex items-center justify-center py-2 rounded-full ${currentPage === 1 ? 'bg-gray-300' : 'bg-blue-100 hover:bg-blue-200'} text-blue-700 font-bold`}\r\n                onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\r\n                disabled={currentPage === 1}\r\n            >\r\n               <FiChevronLeft  className='h-5 w-5'/> Previous\r\n            </button>\r\n            <span>{`Page ${currentPage} of ${totalPages}`}</span>\r\n            <button\r\n                className={`px-8 flex items-center justify-center py-2 rounded-full ${currentPage === totalPages ? 'bg-gray-300' : 'bg-blue-100 hover:bg-blue-200'} text-blue-700 font-bold`}\r\n                onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\r\n                disabled={currentPage === totalPages}\r\n            >\r\n                Next <FiChevronRight className='h-5 w-5'/>\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PaginationNew","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PaginationNew from \"../../components/pagination/PaginationNew\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\n\r\nconst CourseCard = ({ course }) => {\r\n  const navigate = useNavigate();\r\n  const [imageSrc, setImageSrc] = useState(`/assets/upcoming.webp`);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${day}-${month}-${year}`;\r\n  };\r\n  const isUpcoming = course.other1 === \"upcoming\";\r\n  return (\r\n    <div className=\"max-w-xs rounded-2xl overflow-hidden shadow-lg m-4 p-4\">\r\n      <div className=\"relative\">\r\n        {loading && (\r\n          <div className=\"absolute inset-0 flex items-center justify-center bg-gray-200 animate-pulse rounded-2xl\">\r\n            <div className=\"w-24 h-24 bg-gray-400 rounded-full\"></div>\r\n          </div>\r\n        )}\r\n        <img\r\n          src={imageSrc}\r\n          crossOrigin=\"anonymous\"\r\n          alt=\"Thumbnail\"\r\n          className={`w-full h-52 rounded-2xl transition-opacity duration-500 ${loading ? \"opacity-0\" : \"opacity-100\"}`}\r\n          onLoad={() => {\r\n            setLoading(false);\r\n            setImageSrc(course.imageUrl);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"px-6 py-4\">\r\n        <div className=\"font-bold text-lg h-20 mb-1 text-blue-600\">\r\n          {course.title}\r\n        </div>\r\n\r\n        {isUpcoming ? (\r\n          <p className=\"text-gray-600 text-md mt-2\">Expected: October 2024</p>\r\n        ) : (<p className=\"text-gray-600 text-md\">\r\n          Created at: {formatDate(course.createdAt)}\r\n        </p>)}\r\n      </div>\r\n      <div className=\"flex flex-row px-6 pt-4 pb-2 justify-between items-center border-t-2\">\r\n        <p className=\"text-blue-600 font-bold text-2xl\">â‚¹ {course.price}</p>\r\n        {isUpcoming ? (\r\n          <p className=\"text-red-600 font-bold\">Coming Soon</p>\r\n        ) : (<button\r\n          className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\r\n          onClick={() =>\r\n            navigate(\"/course-details-view\", { state: { courseId: course._id } })\r\n          }\r\n        >\r\n          View Details\r\n        </button>)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst CourseDeatils = () => {\r\n  const [courses, setCourse] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemperpage = 6;\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    const getcourse = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `${process.env.REACT_APP_API}zenstudy/api/course/getCoursesP`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (response.status === 204) {\r\n          setCourse([]);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        const data = await response.json();\r\n        // console.log(\"Course_data\", data);\r\n        // setCourse(data);\r\n        setCourse(data.filter(course => course.other1 !== \"upcoming\").map(course => ({\r\n          ...course,\r\n          imageUrl: `${process.env.REACT_APP_API}zenstudy/api/image/getimage/${course.thumbnail}`\r\n        })));\r\n        setLoading(false);\r\n      } catch (error) {\r\n        //console.log(\"Error:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n\r\n    getcourse();\r\n  }, []);\r\n\r\n\r\n  const filteredData = courses.filter((course) => {\r\n    const titleMatch = course.title\r\n      .toLowerCase()\r\n      .includes(searchText.toLowerCase());\r\n    return titleMatch;\r\n  });\r\n\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-screen\">\r\n        <div className=\"text-4xl font-bold animate-pulse\">ZenStudy.</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  const paginatedData = filteredData.slice(\r\n    (currentPage - 1) * itemperpage,\r\n    currentPage * itemperpage\r\n  );\r\n  return (\r\n    <div className=\"container mx-auto p-4 flex flex-col items-center gap-4\">\r\n      {courses.length === 0 ? (\r\n        <div className=\"flex text-center justify-center items-center text-2xl md:text-3xl lg:text-4xl  text-gray-500\">No courses found...</div>\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"flex items-center  justify-center bg-blue-100 rounded-full px-4 py-2 mb-4 w-full md:w-1/2 lg:w-1/2 \">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search Our course by title\"\r\n              onChange={(e) => setSearchText(e.target.value)}\r\n              className=\"bg-blue-100 rounded-l-full focus:outline-none  py-2 w-full text-gray-700\"\r\n            />\r\n            <button className=\"text-blue-500\">\r\n              <FaSearch />\r\n            </button>\r\n          </div>\r\n          <div className=\"flex flex-wrap justify-center\">\r\n            {paginatedData.map((course, index) => (\r\n              <CourseCard key={index} course={course} />\r\n            ))}\r\n          </div>\r\n          <PaginationNew\r\n            setCurrentPage={setCurrentPage}\r\n            currentPage={currentPage}\r\n            data={filteredData}\r\n            itemsPerPage={itemperpage}\r\n          />\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default CourseDeatils;"],"names":["_ref","currentPage","setCurrentPage","data","itemsPerPage","totalPages","Math","ceil","length","_jsxs","className","children","concat","onClick","prev","max","disabled","_jsx","FiChevronLeft","min","FiChevronRight","CourseCard","course","navigate","useNavigate","imageSrc","setImageSrc","useState","loading","setLoading","isUpcoming","other1","src","crossOrigin","alt","onLoad","imageUrl","title","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","formatDate","createdAt","price","state","courseId","_id","CourseDeatils","courses","setCourse","searchText","setSearchText","useEffect","async","response","fetch","process","method","headers","Accept","status","ok","Error","json","filter","map","thumbnail","error","getcourse","filteredData","toLowerCase","includes","paginatedData","slice","Fragment","type","placeholder","onChange","e","target","value","FaSearch","index","PaginationNew"],"sourceRoot":""}